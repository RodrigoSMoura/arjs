{"version":3,"sources":["services/PointService.js","ArApp.js","App.js","ManagePoints.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","PointService","ref","firebase","database","cancellationToken","GetPoints","a","result","get","then","r","forEach","child","point","val","push","catch","err","id","imageUrl","latitude","linkUrl","longitude","name","RegisterChange","callbackFunction","setInterval","console","log","actualPoints","JSON","parse","window","localStorage","getItem","concat","filter","p","undefined","this","find","e","setItem","stringify","InsertPoint","uuid","newPoint","set","toString","CancelToken","i_id","clearInterval","apps","length","initializeApp","service","EntityLocalization","peakFinderKey","scale","imgSrc","useEffect","AFRAME","registerComponent","init","el","addEventListener","preventDefault","remove","components","peakfinder","look-at","gps-entity-place","width","height","src","crossorigin","ArApp","entitiesList","React","useRef","useState","entitites","setEntities","setScale","Chama","points","novosPoints","key","map","document","querySelector","useCallback","alert","vr-mode-ui","raycaster","embedded","arjs","camera","gps-camera","rotation-reader","look-controls-enabled","arjs-look-controls","cursor","position","geometry","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.13f9878e.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/database\"\r\nimport uuid from 'react-uuid'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBvC4MySbJ4bhRs7BubZXMvNnFqpbboy4A\",\r\n    authDomain: \"arjs-acc1c.firebaseapp.com\",\r\n    databaseURL: \"https://arjs-acc1c-default-rtdb.firebaseio.com\",\r\n    projectId: \"arjs-acc1c\",\r\n    storageBucket: \"arjs-acc1c.appspot.com\",\r\n    messagingSenderId: \"382924732548\",\r\n    appId: \"1:382924732548:web:1adf43cc774a02cff1ead1\"\r\n  };\r\n\r\nfunction Initialize(){\r\n    if (!firebase.apps.length){\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n}\r\n\r\nfunction PointService(){\r\n    const db = firebase.database();    \r\n    const ref = db.ref(\"points\");\r\n    var cancellationToken = false;\r\n\r\n    async function GetPoints(){\r\n        var result = [];\r\n        await ref.get().then((r) => {\r\n            r.forEach((child)=>{\r\n                var point = child.val();\r\n                // child.id = child.key;\r\n                result.push(point);\r\n            })\r\n        }).catch((err)=> {\r\n            result = [{\r\n              id: 2,\r\n              imageUrl: \"https://raw.githubusercontent.com/RodrigoSMoura/ARjsTests/main/docs/LOGO-ILHA.png\",\r\n              latitude: \"-11.0111058\",\r\n              linkUrl: \"https://www.instagram.com/ilhaenterprise/\",\r\n              longitude: \"-37.0909365\",\r\n              name: \"Ilha 2\",\r\n            }]\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    function Result(result){\r\n        console.log(result.val());\r\n    }\r\n\r\n    function RegisterChange(callbackFunction){\r\n    const i_id = setInterval(()=> { \r\n    if (cancellationToken) {\r\n        return;\r\n    }\r\n        GetPoints().then((result => {\r\n            console.log(result);\r\n            if (result) {\r\n                var actualPoints = JSON.parse(window.localStorage.getItem('points'));\r\n                if (!actualPoints) actualPoints = [];\r\n                    actualPoints = actualPoints.concat(result.filter(function(p) {return this.find(e => e.id === p.id) === undefined}, actualPoints));\r\n                window.localStorage.setItem('points', JSON.stringify(actualPoints));\r\n\r\n                console.log(\"vou chamar\")\r\n                callbackFunction();\r\n                console.log(\"chamei\")\r\n            }\r\n        }));\r\n      }, 10000);\r\n\r\n      return i_id;\r\n    }\r\n\r\n    function InsertPoint(point){\r\n        point.id = uuid();\r\n        var newPoint = ref.push();\r\n        newPoint.set(point);\r\n        console.log(newPoint.toString())\r\n    }\r\n\r\n    function CancelToken(i_id){\r\n        cancellationToken = true;\r\n        if (i_id) clearInterval(i_id);\r\n    }\r\n    \r\n    return {\r\n        GetPoints, RegisterChange, InsertPoint,\r\n        CancelToken\r\n    }\r\n}\r\n\r\nInitialize();\r\n\r\nexport { firebase, PointService }","import React, { useEffect } from 'react';\r\nimport { Scene, Entity, Image, Camera } from 'react-aframe-ar';\r\nimport { PointService } from './services/PointService'\r\n\r\nconst service = PointService();\r\n\r\nfunction EntityLocalization({ peakFinderKey, scale, latitude, longitude, imgSrc }) {\r\n\r\n  useEffect(() => {\r\n    var registerComponent = window.AFRAME.registerComponent(`peakfinder='${peakFinderKey}'`, {\r\n      init: function () {\r\n        this.el.addEventListener(\"mouseup\", (e) => {\r\n          e.preventDefault();\r\n          console.log(`HELLO`)\r\n          // window.open(\"https://google.com.br\", \"_blank\");\r\n        })\r\n      },\r\n\r\n      remove: function(){\r\n        // this.el.removeEventListener(\"mouseup\");\r\n        console.log(\"removido\");\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      // registerComponent.prototype.remove();\r\n      delete window.AFRAME.components[`peakfinder='${peakFinderKey}'`]\r\n      console.log(\"EntityLocalization removido\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Entity  peakfinder={peakFinderKey} look-at=\"[gps-camera]\" scale={`${scale}, ${scale}, ${scale}`} gps-entity-place={`latitude: ${latitude}; longitude: ${longitude}`}  >\r\n      <Image width=\"1\" height=\"1\" src={imgSrc} crossorigin=\"anonymous\" />\r\n    </Entity>\r\n  )\r\n}\r\n\r\nfunction ArApp() {\r\n  // var entitiesList = React.useRef([]);\r\n  const entitiesList = React.useRef([]);\r\n  const [entitites, setEntities] = React.useState([]);\r\n  const [scale, setScale] = React.useState(5);\r\n  const [forceUpdate, setForceUpdate] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    setScale(5);\r\n    // const i_id = setInterval(()=> { \r\n      // service.GetPoints().then((points) => {\r\n      //   console.log(\"Points: \")\r\n      //   console.log(points)\r\n      //    //  var points = [{\r\n      //    //    id: 2,\r\n      //    //    imageUrl: \"https://raw.githubusercontent.com/RodrigoSMoura/ARjsTests/main/docs/LOGO-ILHA.png\",\r\n      //    //    latitude: \"-11.0111058\",\r\n      //    //    linkUrl: \"https://www.instagram.com/ilhaenterprise/\",\r\n      //    //    longitude: \"-37.0909365\",\r\n      //    //    name: \"Ilha 2\",\r\n      //    //  }]\r\n          \r\n      //    //  console.log(\"Dados: \")\r\n      //    //  console.log(dados)\r\n      //     if (points) {\r\n      //        var actualPoints = JSON.parse(window.localStorage.getItem('points'));\r\n      //        if (!actualPoints) actualPoints = [];\r\n      //          actualPoints = [...actualPoints, ...points.filter(p => !actualPoints.length || actualPoints.find(r => r.id !== p.id))];\r\n      //        window.localStorage.setItem('points', JSON.stringify(actualPoints));\r\n\r\n      //       //  if (points.filter(p => !actualPoints.length || actualPoints.find(r => r.id !== p.id)).length)\r\n      //       // entitiesList.current = actualPoints;\r\n      //       // setForceUpdate(forceUpdate => forceUpdate = actualPoints) \r\n      //     }\r\n      // });\r\n    // const i_id = setInterval(()=> { \r\n      Chama();\r\n    // }, 5000);\r\n\r\n    const i_id = service.RegisterChange(() => {\r\n      Chama();\r\n    });\r\n\r\n     return () => {\r\n       clearInterval(i_id);\r\n       document.querySelector('video').remove();\r\n     }\r\n  }, [])\r\n  \r\n  React.useCallback(() => {\r\n    alert(entitiesList);\r\n  }, [entitiesList]);\r\n\r\n  // useEffect(()=> {\r\n\r\n  function Chama(){\r\n    var points = JSON.parse(window.localStorage.getItem('points'));\r\n    try{\r\n    if (points && points.length){   \r\n      var novosPoints = points.filter(p => entitites.find(e => e.key !== p.id) === undefined);\r\n    if (novosPoints.length){\r\n        setEntities([\r\n              ...entitites,\r\n              ...novosPoints.map((p) => \r\n            <EntityLocalization key={p.id} peakFinderKey={`peakfinder-${p.id}`} scale={scale} latitude={p.latitude} longitude={p.longitude} imgSrc={p.imageUrl}></EntityLocalization>\r\n            )\r\n          ]);\r\n        }\r\n      }\r\n    }catch(err){console.log(err)}    \r\n  }\r\n  // },[forceUpdate])\r\n\r\n  // useEffect(()=>{\r\n  //   if (entitiesList.length)\r\n    \r\n  // },[entitiesList])\r\n\r\n  return (\r\n    <Scene\r\n      vr-mode-ui=\"enabled: false\"\r\n      raycaster={`objects: [${`peakfinder-1`}]`}\r\n      embedded\r\n      arjs=\"sourceType: webcam; debugUIEnabled: false;\"\r\n    >\r\n      {entitites}\r\n      <Entity camera gps-camera rotation-reader look-controls-enabled='true' arjs-look-controls='smoothingFactor: 1' gps-camera='gpsMinDistance: 5'>\r\n        <Entity cursor=\"fuse: false\"\r\n          position=\"0 0 -1\"\r\n          geometry=\"primitive: ring; radiusInner: 0.01; radiusOuter: 0.01\"> </Entity> </Entity>\r\n    </Scene>\r\n  );\r\n}\r\n\r\nexport default ArApp;\r\n","import React from 'react';\nimport ArApp from './ArApp';\n// import ManagePoints from './ManagePoints';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  \n  return (\n    <ArApp />\n    // <Router>\n    //   <header className=\"d-flex justify-content-center py-3\">\n    //   <ul className=\"nav nav-pills\">\n    //     <li class=\"nav-item\">\n    //       <Link className=\"nav-link active\" to=\"/\">Home</Link>\n    //     </li>\n    //     <li class=\"nav-item\">              \n    //       <Link className=\"nav-link\"  to=\"/arapp\">Ar App</Link>\n    //     </li>\n    //   </ul>\n    // </header>\n    //     <Switch>\n    //       <Route path=\"/arapp\">\n    //         <ArApp/>\n    //       </Route>\n    //       <Route path=\"/\">\n    //         <ManagePoints/>\n    //       </Route>\n    //     </Switch>\n    // </Router>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState } from 'react';\r\nimport { PointService } from './services/PointService'\r\n\r\nconst service = PointService();\r\n\r\nfunction ManagePoints(){\r\n\r\n    const [name, setName] = useState();\r\n    const [imageUrl, setImageUrl] = useState();\r\n    const [latitude, setLatitude] = useState();\r\n    const [longitude, setLongitude] = useState();\r\n\r\n    const [points, setPoints] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        UpdatePointsList();\r\n    },[])    \r\n    \r\n    function UpdatePointsList(){\r\n        service.GetPoints().then((result) => {\r\n            \r\n            setPoints(result)\r\n        }).catch((e) => console.log(e));\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        let point = {\r\n            id: 1,\r\n            name,\r\n            imageUrl,\r\n            latitude,\r\n            longitude\r\n        }\r\n        console.log(JSON.stringify(point));\r\n        service.InsertPoint(point);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br/>\r\n            <h1>Inclusão de Pontos de Localização </h1>\r\n            <br/>\r\n\r\n            <form onSubmit={handleSubmit} className=\"row justify-content-md-center\">\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"description\" className=\"form-label\">Nome</label>\r\n                    <input type=\"text\" id=\"description\" className=\"form-control\" placeholder=\"Nome do ponto de localização\" onChange={(e) => setName(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"imageUrl\" className=\"form-label\">Url da imagem</label>\r\n                    <input type=\"text\" id=\"imageUrl\"  className=\"form-control\" placeholder=\"Insira a url da imagem do ponto\" onChange={(e) => setImageUrl(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"latitude\" className=\"form-label\">Latitude</label>\r\n                    <input type=\"text\" id=\"latitude\"  className=\"form-control\" placeholder=\"Latitude\" onChange={(e) => setLatitude(e.target.value)}></input>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"longitude\" className=\"form-label\">Latitude</label>\r\n                    <input type=\"text\" id=\"longitude\"  className=\"form-control\" placeholder=\"Longitude\" onChange={(e) => setLongitude(e.target.value)}></input>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Salvar</button>\r\n                </div>\r\n            </form>\r\n            <br/>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">\r\n                            Id\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                            Name\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                            Latitude\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                            Longitude\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                            ImageUrl\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {points.map(p => \r\n                        <tr key={p.id}>\r\n                            <td>{p.id}</td> \r\n                            <td>{p.name}</td> \r\n                            <td>{p.latitude}</td> \r\n                            <td>{p.longitude}</td> \r\n                            <td>{p.imageUrl}</td> \r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            <br/>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={UpdatePointsList} >Refresh</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManagePoints;\r\n\r\n/*\r\n\r\nimageUrl: \"https://raw.githubusercontent.com/RodrigoSMoura/ARjsTests/main/docs/LOGO-ILHA.png\",\r\nlatitude: \"-11.0111058\",\r\nlinkUrl: \"https://www.instagram.com/ilhaenterprise/\",\r\nlongitude: \"-37.0909365\",\r\nname: \"Ilha 2\",\r\n\r\n*/","// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport ManagePoints from './ManagePoints';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}