{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["App","React","useState","scale","setScale","latitude","setLatitude","longitude","setLongitude","imgSrc","useEffect","navigator","geolocation","getCurrentPosition","position","console","log","coords","window","AFRAME","registerComponent","init","this","el","addEventListener","e","Date","cursor","vr-mode-ui","raycaster","embedded","arjs","peakfinder","look-at","gps-entity-place","width","height","src","crossorigin","gps-camera","rotation-reader","look-controls-enabled","arjs-look-controls","geometry","material","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAAe,I,MC8CAA,MAxCf,WAAgB,IAAD,EACb,EAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCH,IAAMC,UAAU,oBAAhD,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCL,IAAMC,UAAU,YAAlD,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA4BP,IAAMC,SAAS,qFAA3C,mBAAOO,EAAP,KAkBA,OAlBA,KAEFC,qBAAU,WACRC,UAAUC,YAAYC,oBAAmB,SAACC,GACxCC,QAAQC,IAAIF,GACZR,EAAYQ,EAASG,OAAOZ,SAAW,MACvCG,EAAaM,EAASG,OAAOV,UAAY,SAE3CH,EAAS,IAETc,OAAOC,OAAOC,kBAAkB,aAAc,CAC1CC,KAAM,WACJC,KAAKC,GAAGC,iBAAiB,SAAS,SAACC,GAAKV,QAAQC,IAAR,gBAAqB,IAAIU,eAGvE,IAIE,eAAC,QAAD,CACIC,OAAO,oBACPC,aAAW,iBACXC,UAAU,wBACVC,UAAQ,EACRC,KAAK,6CALT,UAQA,cAAC,SAAD,CAAQC,YAAU,EAACC,UAAQ,eAAe9B,MAAK,UAAKA,EAAL,aAAeA,EAAf,aAAyBA,GAAU+B,mBAAA,oBAA+B7B,EAA/B,wBAAuDE,GAAzI,SACI,cAAC,QAAD,CAAO4B,MAAM,IAAIC,OAAO,IAAIC,IAAK5B,EAAQ6B,YAAY,gBAEzD,eAAC,UAAD,GAAQC,cAAA,EAAWC,mBAAA,EAAgBC,wBAAsB,QAAQC,qBAAmB,sBAApF,2BAAoH,qBAApH,0BACA,0BAAUC,SAAS,kBAAkBC,SAAS,gBAD9C,cChCJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6bba2634.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect } from 'react';\nimport {Scene, Entity, Image, Camera} from 'react-aframe-ar';\nimport logoSvg from './logo.svg'\n// import {RegisterPeakFinder} from './arjsIndex.js';\n// import ReactDOM from 'react-dom'; \n \nfunction App() {\n  const [scale, setScale] = React.useState(10);  \n  const [latitude, setLatitude] = React.useState(-11.011135300000001);  \n  const [longitude, setLongitude] = React.useState(-37.0909289);  \n  const [imgSrc, setImgSrc] = React.useState(\"https://raw.githubusercontent.com/RodrigoSMoura/ARjsTests/main/docs/LOGO-ILHA.png\");\n\nuseEffect(() => {\n  navigator.geolocation.getCurrentPosition((position) => {\n    console.log(position) \n    setLatitude(position.coords.latitude + 0.0002)\n    setLongitude(position.coords.longitude + 0.0002)  \n  });\n  setScale(10);\n  // setInterval(() => setImgSrc(logoSvg), 5000);\n  window.AFRAME.registerComponent(\"peakfinder\", {\n      init: function() {\n        this.el.addEventListener(\"click\", (e)=>{console.log(`HELLO ${new Date()}`)})\n      }\n    })\n},[])\n\n  // RegisterPeakFinder();\n  return (\n    <Scene\n        cursor='rayOrigin: mouse;'\n        vr-mode-ui=\"enabled: false\"\n        raycaster=\"objects: [peakfinder]\"\n        embedded\n        arjs=\"sourceType: webcam; debugUIEnabled: false;\"\n      > \n \n    <Entity peakfinder look-at=\"[gps-camera]\" scale={`${scale}, ${scale}, ${scale}`}  gps-entity-place={`latitude: ${latitude}; longitude: ${longitude}`}  >\n        <Image width=\"1\" height=\"1\" src={imgSrc} crossorigin=\"anonymous\" />\n    </Entity>\n    <Camera gps-camera rotation-reader look-controls-enabled='false' arjs-look-controls='smoothingFactor: 1' gps-camera='gpsMinDistance: 5'>\n    <a-cursor geometry=\"primitive: ring\" material=\"opacity: 0;\"></a-cursor> </Camera>      \n  </Scene>\n  );\n}\n\nexport default App;\n","// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}